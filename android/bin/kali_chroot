#!/system/bin/sh

if [ -x /sbin/.magisk/busybox/busybox ]; then
        busybox=/sbin/.magisk/busybox/busybox
else
        echo "Busybox not found, install magisk"
        log "Busybox not found, install magisk"
        exit 1
fi

su -c setenforce 0

######### ROOTFS MOUNTPOINT #########

mnt=/data/local/kali

######### CHECK ROOTFS #########

if [ ! -d "$mnt/usr" ]; then
    echo "Missing a required folder. Something isn't right"
    exit 1
fi

if ! [ -d /dev/shm ]; then
    mkdir /dev/shm
    chmod 777 /dev/shm
fi

####### PERFORMANCE #########
#echo "performance" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
#echo "performance" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
#echo "performance" > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
#echo "performance" > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
#echo "1593600" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
#echo "1593600" > /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
#echo "2150400" > /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
#echo "2150400" > /sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
########   MOUNT  # #########

$busybox mount -o remount,suid /data

mount_sdcard() {
        mountpoint -q "$mnt/sdcard" && return 0

        for sdcard in \
                "$EXTERNAL_STORAGE" \
                /storage/emulated/0 \
                /storage/emulated/legacy \
                /storage/sdcard0 \
                /sdcard
        do
                [ -d "$sdcard" ] &&
                        $busybox mount -o bind "$sdcard" "$mnt/sdcard" &&
                                return 0
        done
        return 1
}

############################ MAIN CHROOT ##########################################
# If chroot's /dev is mounted assume chroot already running and skip initialization
if ! $busybox mountpoint -q $mnt/dev; then
        $busybox mount -r -o bind /system $mnt/system
        mount_sdcard
        $busybox mount -o bind /dev $mnt/dev
        $busybox mount -t devpts devpts $mnt/dev/pts
        $busybox mount -t proc proc $mnt/proc
        $busybox mount -t sysfs sysfs $mnt/sys
        $busybox chmod 666 /dev/null
        $busybox sysctl -w net.ipv4.ip_forward=1 >/dev/null
        echo "127.0.0.1          localhost suse" > $mnt/etc/hosts
        echo "::1                localhost ip6-localhost ip6-loopback" >> $mnt/etc/hosts
        echo "suse" > $mnt/proc/sys/kernel/hostname
	rm -f $mnt/etc/resolv.conf
	android_dns=$( getprop | grep net.dns | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}')
        for i in $android_dns; do echo "nameserver" $i >> $mnt/etc/resolv.conf ; done
        chmod 644 $mnt/etc/resolv.conf
	echo "Kali chroot has been started."
        log "Kali chroot has been started."
else
        echo "Kali chroot is already running!"
fi


######### EXPORT ENVIRONMENT #########
export bin=/system/bin
export mnt=$mnt
PRESERVED_PATH=$PATH
export PATH=/usr/bin:/usr/sbin:/bin:/usr/local/bin:/usr/local/sbin:$PATH
export TERM=linux
export HOME=/root
export USER=root
export LOGNAME=root
unset LD_PRELOAD
